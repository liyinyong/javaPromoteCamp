<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.tccserver2.mapper.AccountBalanceFreezeDao">
  <resultMap id="BaseResultMap" type="com.example.tccserver2.model.AccountBalanceFreeze">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="account_balance_id" jdbcType="BIGINT" property="accountBalanceId" />
    <result column="freeze_number" jdbcType="DECIMAL" property="freezeNumber" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, order_id, account_balance_id, freeze_number, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_balance_freeze
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account_balance_freeze
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByOrderId">
    delete from account_balance_freeze where order_id = #{orderId}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.tccserver2.model.AccountBalanceFreeze" useGeneratedKeys="true">
    insert into account_balance_freeze (user_id, order_id, account_balance_id, freeze_number, gmt_create, gmt_modified
      )
    values (#{userId,jdbcType=BIGINT}, #{currency,jdbcType=TINYINT}, #{balance,jdbcType=DECIMAL}, 
      #{freezeNumber,jdbcType=DECIMAL}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.tccserver2.model.AccountBalanceFreeze" useGeneratedKeys="true">
    insert into account_balance_freeze
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="accountBalanceId != null">
        account_balance_id,
      </if>
      <if test="freezeNumber != null">
        freeze_number,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="accountBalanceId != null">
        #{accountBalanceId,jdbcType=BIGINT},
      </if>
      <if test="freezeNumber != null">
        #{freezeNumber,jdbcType=DECIMAL},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.tccserver2.model.AccountBalanceFreeze">
    update account_balance_freeze
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=TINYINT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="freezeNumber != null">
        freeze_number = #{freezeNumber,jdbcType=DECIMAL},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.tccserver2.model.AccountBalanceFreeze">
    update account_balance_freeze
    set user_id = #{userId,jdbcType=BIGINT},
      currency = #{currency,jdbcType=TINYINT},
      balance = #{balance,jdbcType=DECIMAL},
      freeze_number = #{freezeNumber,jdbcType=DECIMAL},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>